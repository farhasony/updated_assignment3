1)
#include<stdio.h>
#define CONDITION(i)\
printf("preprocessor works\n");                         
int main()
{
	CONDITION(0);
	return 0;
}
// preprocessor will searches for the Macro name CONDITION and substitute the msg preprocessor work
/* output
preprocessor works
*/

2)#include<stdio.h>
# define loop while(TRUE)
int main()
{
	loop ; 
	printf("preprocessor-aptitude");
	return 0;
}
// true is used with boolean eq so it is showing TRUE undefined
//if we write  while(1) then output will blank becoz after loop semicolon is there
//if we remove semicolon we get infinite loop

3)#include<stdio.h>
# define x --5
int main()
{
	int x;
	printf("%d",x);
	return 0;
}
// error we cant use inc/dec operator with constant

4)#include<stdio.h>
#define sqr(x) ++x * ++x
int main()
{
	int a = 3, z;
	z = ++a * ++a; // ++a -> 4  ++a=4+1=5 5*5=25    
	a -= 3;// a=a-3 -> 5-3=2
	printf("%d %d", sqr(a), z); // ++a * ++a -> 4*4=16
	return 0;
}
//output 16 25

5)#include<stdio.h>                      
#define x 1+2
int main()
{
	int i;
	i = x * x * x;// 1+2*1+2*1+2
	printf("%d",i);
}
//output 7


6)#include<stdio.h>
#define a =
int main()
{
	int num a 6;// num=6
	printf("%d",num);
	return 0;
}
// output 6

7)#include<stdio.h>
#define fun(x,y) x*y
int main()
{
	int x = 2, y = 1;
	printf("%d",fun(x + 2, y - 1));//2+2*1-1 ->2+2-1 ->3
	return 0;
}
//output 3

8)#include<stdio.h>
int main()
{
	char DATE[15] = "Current Date";
	printf("%s\n", __DATE__ );// predefined macro
	return 0;
}
//output Aug 10 2021

9)#include<stdio.h>
int main()
{
	char TIME[15] = "Current Time";
	printf("%s\n",__TIME__);
	return 0;
}
// output it will give current time of execution
10)what will be the output of the c program?
int main()
{
Printf(“Line:%d\n”,_LINE_);
return 0;
}
//// output it will give current line number of execution



11)#include<stdio.h>
#define  preprocessor_works(x, y)  \
	printf(#x " and " #y " are great!\n")
int main(void) {
	preprocessor_works(you, me);
	return 0;
}
// output :you and me are great!

12)#include<stdio.h>
# define puts  "%s C preprocessor"
int main()
{
	printf(puts, puts);
	return 0;
}
// output
//%s C preprocessor C preprocessor

13)#include<stdio.h>
#define preprocessor(n) printf ("macro" #n " = %d", macro##n)
int main(void) {
	int macro25 = 47;
	preprocessor(25);// printf("macro25=%d",macro25)
	return 0;
}
/* output
macro25 = 47*/

14)#include<stdio.h>
#include<string.h>
#define MACRO(num) ++num 
int main()
{
	char *ptr = "preprocessor";
	int num =strlen(ptr);//12
	printf("%s  ", MACRO(ptr));
	printf("%d", MACRO(num));
	return 0;
}
/* output
preprocessor  13
*/

15)#include<stdio.h>
#define clrscr() 50
int main()
{
	clrscr();
	printf("%d\n",clrscr());
	return 0;
}
// output is 50

16)#include<stdio.h>
#define clrscr() 50
int main()
{
	clrscr();
	printf("%d\n",clrscr());
	return 0;
}
// output is 50
17)#include<stdio.h>
#define int char
main()
{
	int i=5;
	printf ("sizeof (i) =%d", sizeof (i));// we have defined int as char
}
//sizeof (i) =1




